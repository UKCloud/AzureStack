{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "apiProfile": "2018-03-01-hybrid",
    "metadata": {
        "itemDisplayName": "Deploy an ASR configuration server to Azure Stack",
        "description": "Deploys an ASR configuration server with supporting resources. This template also creates and configures a vault, storage account and virtual network on public Azure",
        "summary": "This template takes a minimum amount of parameters and deploys an ASR configuration server, and configures site recovery to public Azure.",
        "githubUsername": "BaileyLawson",
        "dateUpdated": "2019-03-08"
    },
    "parameters": {
        "Client ID": {
            "type": "string",
            "metadata": {
                "description": "The app ID of a service principal with write permissions for Azure and Azure Stack"
            },
            "minLength": 36,
            "maxLength": 36
        },
        "Client Secret": {
            "type": "securestring",
            "metadata": {
                "description": "A password for the service principal specified in the Client ID parameter"
            },
            "minLength": 1
        },
        "Stack Arm Endpoint": {
            "type": "string",
            "metadata": {
                "description": "The ARM endpoint for Azure Stack"
            },
            "defaultValue": "https://management.frn00006.azure.ukcloud.com",
            "minLength": 20
        },
        "Stack VNet Name": {
            "type": "string",
            "metadata": {
                "description": "The name of the existing virtual network to connect the configuration server to on Azure Stack"
            },
            "defaultValue": "SiteRecoveryVNet",
            "minLength": 2,
            "maxLength": 64
        },
        "Stack Subnet Name": {
            "type": "string",
            "metadata": {
                "description": "The name of the existing virtual network subnet to connect the configuration server to on Azure Stack"
            },
            "defaultValue": "default",
            "minLength": 1
        },
        "Stack Storage Account": {
            "type": "string",
            "metadata": {
                "description": "The name of the storage account to be created on Azure Stack"
            },
            "defaultValue": "siterecoverycssa",
            "minLength": 3,
            "maxLength": 24
        },
        "Azure Resource Group": {
            "type": "string",
            "metadata": {
                "description": "The name of the resource group on public Azure"
            },
            "defaultValue": "SiteRecoveryRG",
            "minLength": 1,
            "maxLength": 90
        },
        "Existing Azure Resource Group": {
            "type": "bool",
            "metadata": {
                "description": "Select 'true' if the resource group already exists in public Azure"
            },
            "defaultValue": false
        },
        "Azure Location": {
            "type": "string",
            "metadata": {
                "description": "The location of the recovery services vault on public Azure"
            },
            "defaultValue": "UkWest",
            "minLength": 6
        },
        "Azure VNet Name": {
            "type": "string",
            "metadata": {
                "description": "The name of the virtual network to be created on public Azure"
            },
            "defaultValue": "SiteRecoveryVNet",
            "minLength": 2,
            "maxLength": 64
        },
        "Azure Subnet Range": {
            "type": "string",
            "metadata": {
                "description": "The subnet range of the virtual network to be created on public Azure"
            },
            "defaultValue": "192.168.1.0/24",
            "minLength": 9,
            "maxLength": 18
        },
        "Azure VNet Range": {
            "type": "string",
            "metadata": {
                "description": "The address space of the virtual network to be created on public Azure"
            },
            "defaultValue": "192.168.0.0/16",
            "minLength": 9,
            "maxLength": 18
        },
        "Azure Storage Account": {
            "type": "string",
            "metadata": {
                "description": "The name of the storage account to be in public Azure"
            },
            "defaultValue": "stacksiterecoverysa",
            "minLength": 3,
            "maxLength": 24
        },
        "Vault Name": {
            "type": "string",
            "metadata": {
                "description": "The name of the recovery services vault to be created on public Azure"
            },
            "defaultValue": "AzureStackVault",
            "minLength": 2,
            "maxLength": 50
        },
        "Existing Azure Vault": {
            "type": "bool",
            "metadata": {
                "description": "Select 'true' if the vault already exists in public Azure"
            },
            "defaultValue": false
        },
        "Replication Policy Name": {
            "type": "string",
            "metadata": {
                "description": "The name of the site recovery replication policy to be created in the recovery services vault"
            },
            "defaultValue": "ReplicationPolicy"
        },
        "Config Server Username": {
            "type": "string",
            "metadata": {
                "description": "The username for the configuration server"
            },
            "defaultValue": "ConfigAdmin",
            "minLength": 1,
            "maxLength": 15
        },
        "Config Server Password": {
            "type": "securestring",
            "metadata": {
                "description": "The password for the configuration server"
            },
            "minLength": 12,
            "maxLength": 123
        },
        "Config Server Name": {
            "type": "string",
            "metadata": {
                "description": "The name of the configuration server VM"
            },
            "defaultValue": "SRConfigServer",
            "minLength": 1,
            "maxLength": 15
        },
        "Temporary Files Path": {
            "type": "string",
            "metadata": {
                "description": "Location on configuration server where setup files will be stored"
            },
            "defaultValue": "C:\\TempASR\\"
        },
        "Extraction Path": {
            "type": "string",
            "metadata": {
                "description": "Folder within the Temporary Files Path where the unified setup will be extracted to"
            },
            "defaultValue": "Extracted"
        },
        "MySQL Root Password": {
            "type": "securestring",
            "metadata": {
                "description": "The root password for the MySQL server created on the Configuration Server"
            },
            "minLength": 8,
            "maxLength": 16
        },
        "MySQL User Password": {
            "type": "securestring",
            "metadata": {
                "description": "The user password for the MySQL server created on the Configuration Server"
            },
            "minLength": 8,
            "maxLength": 16
        },
        "Encryption Key": {
            "type": "securestring",
            "metadata": {
                "description": "The encryption key for the MySQL database on the configuration server"
            },
            "minLength": 12
        },
        "Windows Username": {
            "type": "string",
            "metadata": {
                "description": "The username of an administrator account on the Windows VMs to be protected"
            },
            "defaultValue": "Administrator"
        },
        "Windows Password": {
            "type": "securestring",
            "metadata": {
                "description": "The password of an administrator account on the Windows VMs to be protected"
            }
        },
        "Linux Root Password": {
            "type": "securestring",
            "metadata": {
                "description": "The password of the root account on the Linux VMs to be protected"
            }
        }
    },
    "variables": {
        "location": "[resourceGroup().location]",
        "ResourceGroupName": "[resourceGroup().name]",
        "TenantID": "[subscription().tenantId]",
        "imagePublisher": "MicrosoftWindowsServer",
        "imageOffer": "WindowsServer",
        "imageSKU" : "2016-Datacenter",
        "OSDiskName": "osdisk",
        "nicName": "CSNIC",
        "NSGName": "SiteRecoveryNSG",
        "storageAccountType": "Standard_LRS",
        "vmStorageAccountContainerName": "asrconfigservervhds",
        "publicIPAddressName": "SiteRecoveryCSIP",
        "vmSize": "Standard_A8_v2",
        "vnetID": "[resourceId('Microsoft.Network/virtualNetworks', parameters('Stack VNet Name'))]",
        "subnetRef": "[concat(variables('vnetID'),'/subnets/',parameters('Stack Subnet Name'))]",
        "ddisk1name": "ProcessServerCacheDisk",
        "ddisk2name": "RetentionDisk",
        "scriptFile": "https://raw.githubusercontent.com/UKCloud/AzureStack/master/Users/Extensions/Windows/ASRCSConfig.ps1"
    },
    "resources": [
        {
            "type": "Microsoft.Network/networkSecurityGroups",
            "name": "[variables('NSGName')]",
            "location": "[variables('location')]",
            "tags": {
                "displayName": "[variables('NSGName')]"
            }
        },
        {
            "type": "Microsoft.Network/publicIPAddresses",
            "name": "[variables('publicIPAddressName')]",
            "location": "[resourceGroup().location]",
            "properties": {
                "publicIPAllocationMethod": "Dynamic",
                "publicIPAddressVersion": "IPv4"
            }
          },
        {
            "type": "Microsoft.Storage/storageAccounts",
            "name": "[toLower(parameters('Stack Storage Account'))]",
            "location": "[variables('location')]",
            "properties": {
                "accountType": "[variables('storageAccountType')]"
            }
        },
        {
            "type": "Microsoft.Network/networkInterfaces",
            "name": "[variables('nicName')]",
            "location": "[variables('location')]",
            "dependsOn": [
                "[concat('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressName'))]",
                "[concat('Microsoft.Network/networkSecurityGroups/', variables('NSGName'))]"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName'))]"
                            },
                            "subnet": {
                                "id": "[variables('subnetRef')]"
                            }
                        }
                    }
                ],
                "networkSecurityGroup": {
                    "id": "[resourceId('Microsoft.Network/networkSecurityGroups',variables('NSGName'))]"
                }
            }
        },
        {
            "type": "Microsoft.Compute/virtualMachines",
            "name": "[parameters('Config Server Name')]",
            "location": "[variables('location')]",
            "dependsOn": [
                "[concat('Microsoft.Storage/storageAccounts/', toLower(parameters('Stack Storage Account')))]",
                "[concat('Microsoft.Network/networkInterfaces/', variables('nicName'))]"
            ],
            "properties": {
                "hardwareProfile": {
                    "vmSize": "[variables('vmSize')]"
                },
                "osProfile": {
                    "computerName": "[parameters('Config Server Name')]",
                    "adminUsername": "[parameters('Config Server Username')]",
                    "adminPassword": "[parameters('Config Server Password')]"
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "[variables('imagePublisher')]",
                        "offer": "[variables('imageOffer')]",
                        "sku": "[variables('imageSKU')]",
                        "version": "latest"
                    },
                    "osDisk": {
                        "name": "osdisk",
                        "vhd": {
                            "uri": "[concat(reference(concat('Microsoft.Storage/storageAccounts/', toLower(parameters('Stack Storage Account'))), providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).primaryEndpoints.blob, variables('vmStorageAccountContainerName'),'/',variables('OSDiskName'),'.vhd')]"
                        },
                        "caching": "ReadWrite",
                        "createOption": "FromImage"
                    },
                    "dataDisks": [
                        {
                          "diskSizeGB": 605,
                          "lun": 0,
                          "createOption": "Empty",
                          "name": "[variables('ddisk1name')]",
                          "vhd" : {
                              "uri": "[concat(reference(concat('Microsoft.Storage/storageAccounts/', toLower(parameters('Stack Storage Account'))), providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).primaryEndpoints.blob, variables('vmStorageAccountContainerName'),'/',variables('ddisk1name'),'.vhd')]"
                          }
                        },
                        {
                          "diskSizeGB": 605,
                          "lun": 1,
                          "createOption": "Empty",
                          "name": "[variables('ddisk2name')]",
                          "vhd" : {
                            "uri": "[concat(reference(concat('Microsoft.Storage/storageAccounts/', toLower(parameters('Stack Storage Account'))), providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).primaryEndpoints.blob, variables('vmStorageAccountContainerName'),'/',variables('ddisk2name'),'.vhd')]"
                        }
                        }
                      ]
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces',variables('nicName'))]"
                        }
                    ]
                },
                "diagnosticsProfile": {
                    "bootDiagnostics": {
                        "enabled": true,
                        "storageUri": "[reference(concat('Microsoft.Storage/storageAccounts/', toLower(parameters('Stack Storage Account'))), providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).primaryEndpoints.blob]"
                    }
                }
            },
            "resources": [
                {
                  "name": "SRSetup",
                  "type": "extensions",
                  "location": "[resourceGroup().location]",
                  "dependsOn": [
                    "[concat('Microsoft.Compute/virtualMachines/', parameters('Config Server Name'))]"
                  ],
                  "tags": {
                    "displayName": "SRSetup"
                  },
                  "properties": {
                    "publisher": "Microsoft.Compute",
                    "type": "CustomScriptExtension",
                    "typeHandlerVersion": "1.9",
                    "autoUpgradeMinorVersion": true,
                    "settings": {
                        "fileUris": [ "[variables('scriptFile')]" ]
                    },
                    "protectedSettings": {
                        "commandToExecute" : "[concat('powershell -ExecutionPolicy Unrestricted -File ASRCSConfig.ps1 -ClientID ',parameters('Client ID'),' -ClientSecret ',parameters('Client Secret'),' -TenantID ',variables('TenantID'),' -ArmEndpoint ',parameters('Stack Arm Endpoint'),' -TempFilesPath ',parameters('Temporary Files Path'),' -ExtractionPath ',parameters('Extraction Path'),' -MySQLRootPassword ',parameters('MySQL Root Password'),' -MySQLUserPassword ',parameters('MySQL User Password'),' -VNetName ',parameters('Azure VNet Name'),' -AzureStorageAccount ',toLower(parameters('Azure Storage Account')),' -SubnetRange ',parameters('Azure Subnet Range'),' -VNetRange ',parameters('Azure VNet Range'),' -AzureLocation ',parameters('Azure Location'),' -ReplicationPolicyName ',parameters('Replication Policy Name'),' -ExistingAzureResourceGroup ',parameters('Existing Azure Resource Group'),' -AzureResourceGroup ',parameters('Azure Resource Group'),' -ExistingAzureVault ',parameters('Existing Azure Vault'),' -VaultName ',parameters('Vault Name'),' -ConfigServerUsername ',parameters('Config Server Username'),' -ConfigServerPassword ',parameters('Config Server Password'),' -EncryptionKey ',parameters('Encryption Key'),' -WindowsUsername ',parameters('Windows Username'),' -WindowsPassword ',parameters('Windows Password'),' -LinuxRootPassword ',parameters('Linux Root Password'),' -StackResourceGroup ',variables('ResourceGroupName'))]"
                    }
                  }
                }
            ]
        }
    ]
}
